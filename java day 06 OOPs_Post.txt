Constructor:
A constructor is a special member function that gets executed automatically whenever a new objectis created. 

Note: Constructor is a special member function that avoids unexpected results caused by 
un-initialized variables. Generally, variables must be initialized before they are used for 
processing. Because, uninitialized variables contain garbage values. The constructor for the 
class gets automatically invoked every time new object is created. 

Characteristics of constructors:
* It has the same name as its class name.
* It doesn’t have any return type not even void.
* The constructor can be declared as public.
* It can be overloaded.
* It is normally used to initialize the member of the object. 
* There are two types of constructors. They are
a) Default constructor.
b) Parameterized constructor. 
* The constructor with no arguments is called default constructor. If no constructors are 
defined for a class, then java automatically generates default constructor. 
* The constructor with arguments is called parameterized constructor. If any 
constructors are defined for a class with parameters, then java will not create a default 
constructor.
* A class can have multiple constructors. This is called constructor overloading. 
* All the constructors have the same name as the class name but they differ only in terms 
of number of arguments or datatypes or order of arguments.

Constructor Overloading:
class Area
{
int a;
Area() // default constructor
{
int b=10,h=5;
a=(b*h)/2;
System.out.println("area of triangle="+a);
}
Area(int s) // parameterized constructor
{
a=s*s;
System.out.println("area of square="+a);
}
Area(int l,int b) // parameterized constructor
{
a=l*b;
System.out.println("area of rectangle="+a);
}
Area(int l,int b,int h) // parameterized constructor
{
a=l*b*h;
System.out.println("area of cube="+a);
}
}
class Constructor
{
public static void main(String args[])
{
Area a1=new Area();
Area a2=  Area(10);
Area a3=new Area(10,20);
Area a4=new Area(10,20,5);
}
}
o/p:

-----------------------------------------------------------------
Garbage collection:
Dynamic allocation of objects is done using “new” keyword in java. Sometimes allocations of new objects fail due to insufficient memory. In such cases, memory space consumed by unused objects is deallocated and made available for reallocation. This is done manually in languages such as C and C++ using “delete” or “free” keyword. 
In Java, a new concept called garbage collection is introduced for this purpose. It is a trouble-free approach which reclaims the objects automatically. This is done without the interference of the programmer. The objects which are not used for long time and which 
does not have any references are identified and their space is deallocated. This recycled 
space can now be used by other objects. 
Garbage collection is performed during program execution. It is a time consuming 
process. Therefore, it is performed only when required.

-----------------------------------------------------------------
“this” keyword:
Java define “this” keyword that can be used inside any method to refer the current 
object. 
* It will be passed implicitly when method is called. This will be done automatically.
* Any member function can find the address the object and access its data by using “this” 
keyword. 

--------------------------------------------------------------
Command line arguments:
In Java, the user is allowed to give input or arguments at the command prompt at the 
time of executing. They are called command line arguments.

Program to read two integers and print sum

class Sum 
{
public static void main(String[] args) 
{
int a,b,sum;
a=Integer.parseInt(args[0]);
b=Integer.parseInt(args[1]);
sum=a+b;
System.out.println("sum of a and b="+sum);
}
}
